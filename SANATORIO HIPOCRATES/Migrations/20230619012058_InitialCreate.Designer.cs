// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SANATORIO_HIPOCRATES.Config;

namespace SANATORIO_HIPOCRATES.Migrations
{
    [DbContext(typeof(Conexion))]
    [Migration("20230619012058_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 64)
                .HasAnnotation("ProductVersion", "5.0.12");

            modelBuilder.Entity("SANATORIO_HIPOCRATES.Entidades.Empleado", b =>
                {
                    b.Property<long>("IdEmpleado")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    b.Property<DateTime>("FechaAlta")
                        .HasColumnType("datetime(6)");

                    b.Property<long>("IdPersona")
                        .HasColumnType("bigint");

                    b.Property<string>("Password")
                        .HasColumnType("longtext");

                    b.Property<double>("Salario")
                        .HasColumnType("double");

                    b.Property<string>("Username")
                        .HasColumnType("longtext");

                    b.HasKey("IdEmpleado");

                    b.HasIndex("IdPersona")
                        .IsUnique();

                    b.ToTable("Empleados");
                });

            modelBuilder.Entity("SANATORIO_HIPOCRATES.Entidades.MedicoPersonal", b =>
                {
                    b.Property<long>("IdMedico")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    b.Property<string>("Especialidad")
                        .HasColumnType("longtext");

                    b.Property<long>("IdEmpleado")
                        .HasColumnType("bigint");

                    b.HasKey("IdMedico");

                    b.HasIndex("IdEmpleado")
                        .IsUnique();

                    b.ToTable("Medicos");
                });

            modelBuilder.Entity("SANATORIO_HIPOCRATES.Entidades.Paciente", b =>
                {
                    b.Property<long>("IdPaciente")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    b.Property<long>("IdPersona")
                        .HasColumnType("bigint");

                    b.Property<long>("NumeroCarnet")
                        .HasColumnType("bigint");

                    b.Property<string>("ObraSocial")
                        .HasColumnType("longtext");

                    b.HasKey("IdPaciente");

                    b.HasIndex("IdPersona")
                        .IsUnique();

                    b.ToTable("Pacientes");
                });

            modelBuilder.Entity("SANATORIO_HIPOCRATES.Entidades.Persona", b =>
                {
                    b.Property<long>("IdPersona")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    b.Property<string>("Apellido")
                        .HasColumnType("longtext");

                    b.Property<string>("Dni")
                        .HasColumnType("longtext");

                    b.Property<string>("Domicilio")
                        .HasColumnType("longtext");

                    b.Property<string>("Email")
                        .HasColumnType("longtext");

                    b.Property<DateTime>("FechaNacimiento")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Nacionalidad")
                        .HasColumnType("longtext");

                    b.Property<string>("Nombre")
                        .HasColumnType("longtext");

                    b.Property<string>("Sexo")
                        .IsRequired()
                        .HasColumnType("varchar(1)");

                    b.Property<string>("Telefono")
                        .HasColumnType("longtext");

                    b.HasKey("IdPersona");

                    b.ToTable("Personas");
                });

            modelBuilder.Entity("SANATORIO_HIPOCRATES.Entidades.Recepcionista", b =>
                {
                    b.Property<long>("IdRecepcionista")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    b.Property<long>("IdEmpleado")
                        .HasColumnType("bigint");

                    b.HasKey("IdRecepcionista");

                    b.HasIndex("IdEmpleado")
                        .IsUnique();

                    b.ToTable("Recepcionistas");
                });

            modelBuilder.Entity("SANATORIO_HIPOCRATES.Entidades.Turno", b =>
                {
                    b.Property<long>("IdTurno")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime(6)");

                    b.Property<long>("IdPaciente")
                        .HasColumnType("bigint");

                    b.HasKey("IdTurno");

                    b.HasIndex("IdPaciente");

                    b.ToTable("Turnos");
                });

            modelBuilder.Entity("SANATORIO_HIPOCRATES.Entidades.Empleado", b =>
                {
                    b.HasOne("SANATORIO_HIPOCRATES.Entidades.Persona", "Persona")
                        .WithOne()
                        .HasForeignKey("SANATORIO_HIPOCRATES.Entidades.Empleado", "IdPersona")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Persona");
                });

            modelBuilder.Entity("SANATORIO_HIPOCRATES.Entidades.MedicoPersonal", b =>
                {
                    b.HasOne("SANATORIO_HIPOCRATES.Entidades.Empleado", "Empleado")
                        .WithOne()
                        .HasForeignKey("SANATORIO_HIPOCRATES.Entidades.MedicoPersonal", "IdEmpleado")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Empleado");
                });

            modelBuilder.Entity("SANATORIO_HIPOCRATES.Entidades.Paciente", b =>
                {
                    b.HasOne("SANATORIO_HIPOCRATES.Entidades.Persona", "Persona")
                        .WithOne()
                        .HasForeignKey("SANATORIO_HIPOCRATES.Entidades.Paciente", "IdPersona")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Persona");
                });

            modelBuilder.Entity("SANATORIO_HIPOCRATES.Entidades.Recepcionista", b =>
                {
                    b.HasOne("SANATORIO_HIPOCRATES.Entidades.Empleado", "Empleado")
                        .WithOne()
                        .HasForeignKey("SANATORIO_HIPOCRATES.Entidades.Recepcionista", "IdEmpleado")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Empleado");
                });

            modelBuilder.Entity("SANATORIO_HIPOCRATES.Entidades.Turno", b =>
                {
                    b.HasOne("SANATORIO_HIPOCRATES.Entidades.Paciente", "Paciente")
                        .WithMany()
                        .HasForeignKey("IdPaciente")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Paciente");
                });
#pragma warning restore 612, 618
        }
    }
}
